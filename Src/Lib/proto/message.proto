syntax = "proto3";

package SkillBridge.Message;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
	SUCCESS = 0;
	FAILED = 1;
}

enum CHARACTER_TYPE
{
	Player = 0;
	NPC = 1;
	Monster = 2;
}

enum CHARACTER_CLASS
{
	NONE = 0;
	WARRIOR = 1;
	WIZARD = 2;
	ARCHER = 3;
}

enum CHARACTER_STATE
{
	IDLE = 0;
	MOVE = 1;
}

enum ENTITY_EVENT
{
	NONE = 0;
	IDLE = 1;
	MOVE_FWD = 2;
	MOVE_BACK = 3;
	JUMP = 4;
	RIDE = 5;//(坐骑系统)
}

enum ITEM_TYPE{
	NORMAL = 0;
	MATERIAL = 1;
	TASK = 2;  //任务道具
	EQUIP = 3;
	RIDE = 4;//(坐骑系统)
}

enum EQUIP_SLOT
{
	WEAPON = 0;
	ACCESSORY = 1;
	HELMET = 2; //头盔
	CHEST = 3; //胸甲
	SHOULDER = 4; //护肩
	PANTS = 5; //裤子
	BOOTS = 6; //靴子
	SLOT_MAX = 7;
}

message NUserInfo {
	int32 id = 1;
	NPlayerInfo player = 2;
}

message NPlayerInfo {
	int32 id = 1;
	repeated NCharacterInfo characters = 2;
}

message NCharacterInfo {
	int32 id = 1; //db id
	int32 config_id = 2;       //config id
	int32 entity_id = 3;       //entity id
	string name = 4;
	CHARACTER_TYPE type = 5;
	CHARACTER_CLASS class = 6;
	int32 level = 7;
	int64 exp= 8;
	NAttributeDynamic attrDynamic = 9;
	int32 mapId = 10;
	NEntity entity = 11;
    int64 gold = 12;

	repeated NItemInfo Items = 13;
	NBagInfo Bag = 14;
	bytes Equips = 15;

	repeated NQuestInfo quests = 16;
	repeated NFriendInfo friends = 17;
	NGuildInfo guild = 18;
	int32 ride = 19;//坐骑ID(坐骑系统)

	repeated NSkillInfo Skills = 20;
}

message NAttributeDynamic {
  	int32 HP= 1;
	int32 MP= 2;
}

message NItemInfo
{
    int32 id = 1;
	int32 count = 2;
}


message NVector3
{
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}

message NBagInfo
{
   int32 UnLocked = 1;
   bytes Items = 2;
}
enum STATUS_ACTION
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

enum STATUS_TYPE
{
	MONEY = 0;
	EXP = 1;
	LEVEL =2;
	SKILL_POINT = 3;
	ITEM = 4;
}

enum STATUS_SOURCE
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

message NStatus
{
	STATUS_TYPE type = 1;
	STATUS_ACTION action = 2;
	int32 id = 3;
	int32 value = 4;
}

message StatusNotify
{
	repeated NStatus status = 1;
}
////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////


message NEntity {
	int32 id = 1;
	NVector3 position = 2;
	NVector3 direction = 3;
	int32 speed = 4;
}

message NEntitySync {
	int32 id = 1;
	ENTITY_EVENT event = 2;
	NEntity entity = 3;
	int32 param = 4;
}



////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////

message NetMessage{
	NetMessageRequest Request = 1;
	NetMessageResponse Response = 2;
}

message NetMessageRequest{
	UserRegisterRequest userRegister = 1;
	UserLoginRequest userLogin = 2;
	UserCreateCharacterRequest createChar = 3;
	UserGameEnterRequest gameEnter = 4;
	UserGameLeaveRequest gameLeave = 5;
	
	MapCharacterEnterRequest mapCharacterEnter = 6;

	MapEntitySyncRequest mapEntitySync = 8;
	MapTeleportRequest mapTeleport = 9;

	ItemBuyRequest itemBuy = 10;
	ItemEquipRequest itemEquip = 11;
	QuestListRequest questList = 12;
	QuestAcceptRequest questAccept = 13;
	QuestSubmitRequest questSubmit = 14;
	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListRequest friendList = 17;
	FriendRemoveRequest friendRemove = 18;
	//(组队系统)
	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoRequest teamInfo = 21;
	TeamLeaveRequest teamLeave = 22;
	//(公会系统)
	GuildCreateRequest guildCreate = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildRequest guild = 26;
	GuildLeaveRequest guildLeave = 27;
	GuildListRequest guildList = 28;
	//公会管理权限
	GuildAdminRequest guildAdmin = 29;
	GuildNoticeChangeRequest guildNoticeChange = 30;
	ChatRequest chat = 31;

	SkillCastRequest skillCast = 50;
	ArenaChallengeRequest arenaChallengeReq = 60;
	ArenaChallengeResponse arenaChallengeRes = 61;
	ArenaReadyRequest arenaReady = 64;

	StoryStartRequest storyStart = 65;
	StoryEndRequest storyEnd = 66;

}

message NetMessageResponse{
	UserRegisterResponse userRegister = 1;
	UserLoginResponse userLogin = 2;
	UserCreateCharacterResponse createChar = 3;
	UserGameEnterResponse gameEnter = 4;
	UserGameLeaveResponse gameLeave = 5;

	MapCharacterEnterResponse mapCharacterEnter = 6;
	MapCharacterLeaveResponse mapCharacterLeave = 7;

	MapEntitySyncResponse mapEntitySync = 8;
	
	ItemBuyResponse itemBuy = 10;
	ItemEquipResponse itemEquip = 11;
    QuestListResponse questList = 12;
	QuestAcceptResponse questAccept = 13;
    QuestSubmitResponse questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListResponse friendList = 17;
	FriendRemoveResponse friendRemove = 18;
	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoResponse teamInfo = 21;
	TeamLeaveResponse teamLeave = 22;
	//(公会系统)
	GuildCreateResponse guildCreate = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildResponse guild = 26;
	GuildLeaveResponse guildLeave = 27;
	GuildListResponse guildList = 28;
	GuildAdminResponse guildAdmin = 29;
	GuildNoticeChangeResponse guildNoticeChange = 30;
    ChatResponse chat = 31;
	
	SkillCastResponse skillCast = 50;
	SkillHitResponse skillHits = 51;
	BuffResponse buffRes =52; 
	ArenaChallengeRequest arenaChallengeReq = 60;
	ArenaChallengeResponse arenaChallengeRes = 61;
	ArenaBeginResponse arenaBegin = 62;
	ArenaEndResponse arenaEnd = 63;
	ArenaReadyResponse arenaReady = 64;
	ArenaRoundStartResponse arenaRoundStart = 65;
	ArenaRoundEndResponse  arenaRoundEnd = 66;

	StoryStartResponse storyStart = 67;
	StoryStartResponse storyEnd = 68;

	StatusNotify statusNotify = 100;
}


// User Protocol
message UserLoginRequest {
	string user = 1;
	string passward = 2;
}

message UserLoginResponse {
	RESULT result = 1;
	string errormsg = 2;
	NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
	string user = 1;
	string passward = 2;
}

message UserRegisterResponse {
	RESULT result = 1;
	string errormsg = 2;
}

message UserCreateCharacterRequest
{
	string name = 1;
	CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
	RESULT result = 1;
	string errormsg = 2;
	repeated NCharacterInfo characters = 3;
}

message UserGameEnterRequest
{
	int32 characterIdx = 1;
}

message UserGameEnterResponse {
	RESULT result = 1;
	string errormsg = 2;
	NCharacterInfo character = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
	RESULT result = 1;
	string errormsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
	int32 mapId = 1;
}

message MapCharacterEnterResponse
{
	int32 mapId = 1;
	repeated NCharacterInfo characters = 2;
}

message MapCharacterLeaveResponse
{
	int32 entityId = 1;
}


message MapEntitySyncRequest
{
    NEntitySync entitySync = 1;
}


message MapEntitySyncResponse
{
    repeated NEntitySync entitySyncs = 2;
}

message MapTeleportRequest
{
	int32 teleporterId = 1;
}

message ItemBuyRequest
{
	int32 shopId = 1;
	int32 shopItemId = 2; 
}

message ItemBuyResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

message BagSaveRequest
{
  NBagInfo BagInfo = 1;
}
message BagSaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
}
message ItemEquipRequest
{
	int32 slot = 1;
	int32 itemId = 2;
	bool isEquip = 3;
}

message ItemEquipResponse
{
	RESULT result = 1;
	string errormsg = 2;
}
//（任务系统）
//任务状态
enum QUEST_STATUS{
	IN_PROGRESS = 0;  //已接受，未完成
	COMPLATED = 1; //已完成，未提交
	FINISHED = 2; //已完成，已提交
	FAILED = 3; //已失败
}
//任务列表类型
enum QUEST_LIST_TYPE{
	ALL = 0;	//所有任务
	IN_PROGRESS = 1;  //进行中任务
	FINISHED = 2;	//已完成任务
}
//任务信息
message NQuestInfo{
	//任务ID
	int32 quest_id = 1;
	//任务唯一ID
	int32 quest_guid = 2;
	//任务状态
	QUEST_STATUS status = 3;
	//任务目标
	repeated int32 targets = 4;
}
//请求任务列表协议
message QuestListRequest{
	QUEST_LIST_TYPE listType = 1;
}
//响应任务列表协议
message QuestListResponse{
	//结果
	RESULT result = 1;
	//消息
	string errormsg = 2;
	//内容
	repeated NQuestInfo quests = 3;
}
//接受任务请求
message QuestAcceptRequest{
	int32 quest_id = 1;
}
//接受任务响应
message QuestAcceptResponse{
	RESULT result = 1;
	string errormsg = 2;
	//任务信息
	NQuestInfo quest = 3;
}
//提交任务请求
message QuestSubmitRequest{
	int32 quest_id = 1;
}
//提交任务响应
message QuestSubmitResponse{
	RESULT result = 1;
	string errormsg = 2;
	//任务信息
	NQuestInfo quest = 3;
}
//拒绝任务请求
message QuestAbandonRequest{
	int32 quest_id = 1;
}
//拒绝任务响应 
message QuestAbandonResponse{
	RESULT result = 1;
	string errormsg = 2;
}
//(好友系统)
//好友信息
message NFriendInfo{
	int32 id = 1;//添加好友纪录ID
	NCharacterInfo friendInfo = 2;//好友信息
	int32 status = 3;//好友状态
}
//添加好友请求
message FriendAddRequest{
	int32 from_id = 1;//玩家自己ID
	string from_name = 2;//玩家自己名字
	int32 to_id = 3;//对方玩家ID
	string to_name = 4;//对方玩家名称
}
//添加好友响应
message FriendAddResponse{
	RESULT result = 1;
	string errormsg = 2;
	FriendAddRequest request = 3;//好友请求一直存在响应中，方便获取响应成功或失败对应哪条请求，时刻跟踪请求信息
}
//好友列表请求
message FriendListRequest{
	
}
//好友列表响应
message FriendListResponse{
	RESULT result = 1;
	string errormsg = 2;
	repeated NFriendInfo friends = 3;//当前所有好友
}
//好友移除请求
message FriendRemoveRequest{
	int32 id = 1;
	int32 friendId = 2;
}
//好友移除响应
message FriendRemoveResponse{
	RESULT result = 1;
	string errormsg = 2;
	int32 id = 3;
}
//(组队系统)
//组队信息
message NTeamInfo{
	int32 id = 1;//队伍ID
	int32 leader = 2;//队长
	repeated NCharacterInfo members = 3;//队伍成员
}
//组队请求
message TeamInviteRequest{
	int32 team_id = 1;//队伍ID
	int32 from_id = 2;
	string from_name = 3;
	int32 to_id = 4;
	string to_name = 5;
}
//组队响应
message TeamInviteResponse{
	RESULT result = 1;
	string errormsg = 2;
	TeamInviteRequest request = 3;
}
//队伍信息请求
message TeamInfoRequest{

}
//队伍信息响应
message TeamInfoResponse{
	RESULT result = 1;
	string errormsg = 2;
	NTeamInfo team = 3;
}
//离开队伍请求
message TeamLeaveRequest{
	int32 team_id = 1;
	int32 characterId = 2;
}
//离开队伍响应
message TeamLeaveResponse{
	RESULT result = 1;
	string errormsg = 2;
	int32 characterId = 3;
}
//(公会系统)
//职位
enum GUILD_TITLE{
	NONE = 0;//普通成员
	PRESIDENT = 1;//会长
	VICE_PRESIDENT = 2;//副会长
}
//公会申请结果
enum APPLY_RESULT{
	NONE = 0;//没有处理
	ACCEPT = 1;//通过
	REJECT = 2;//拒绝
}
//公会信息
message NGuildInfo{
	int32 id = 1;//公会id
	string guild_name = 2;//公会名称
	int32 leaderId = 3;//会长id
	string leaderName = 4;//会长名称
	string notice = 5;//公会公告
	int32 memberCount = 6;//成员数量
	repeated NGuildMemberInfo members = 7;//成员列表
	repeated NGuildApplyInfo applies = 8;//申请加入信息
	int64 createTime = 9;//创建公会时间
}
//公会成员信息
message NGuildMemberInfo{
	int32 id = 1;//成员ID
	int32 characterId = 2;//角色ID
	GUILD_TITLE title = 3;//职位
	NCharacterInfo info = 4;//角色信息
	int64 joinTime = 5;//加入时间
	int64 lastTime = 6;//上次在线时间
	int32 status = 7;//在线状态
}
//公会加入申请信息
message NGuildApplyInfo{
	int32 guild_id = 1;
	int32 characterId = 2;
	string name = 3;
	int32 class = 4;
	int32 level = 5;
	APPLY_RESULT result = 6;
}

//创建公会请求
message GuildCreateRequest{
	string guild_name = 1;
	string guild_notice = 2;
}
//创建公会响应
message GuildCreateResponse{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guildInfo = 3;//公会信息
}

message GuildNoticeChangeRequest{
	string guild_notice = 1;
}

message GuildNoticeChangeResponse{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guildInfo = 3;//公会信息
}

//加入公会请求[发送者-服务器-会长]
message GuildJoinRequest{
	NGuildApplyInfo apply = 1;//存储数据库
}
//加入公会响应
message GuildJoinResponse{
	RESULT result = 1;
	string errormsg = 2;
	NGuildApplyInfo apply = 3;//存储数据库
}

//公会列表请求
message GuildListRequest{

}
//公会列表响应
message GuildListResponse{
	RESULT result = 1;
	string errormsg = 2;
	repeated NGuildInfo guilds = 3;
}

//公会信息请求
message GuildRequest{

}
//公会信息响应
message GuildResponse{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guilds = 3;
}

//退出公会请求
message GuildLeaveRequest{

}
//退出公会响应
message GuildLeaveResponse{
	RESULT result = 1;
	string errormsg = 2;
}

//公会管理权限
enum GUILD_ADMIN_COMMAND{
	KICKOUT = 1;//踢人
	PROMOTE = 2;//晋升
	DEPOST = 3;//罢免
	TRANSFER = 4;//转让会长
}

//公会管理请求
message GuildAdminRequest{
	GUILD_ADMIN_COMMAND command = 1;
	int32 target = 2;
}
//公会管理响应
message GuildAdminResponse{
	RESULT result = 1;
	string errormsg = 2;
	GuildAdminRequest command =3;
}
//（聊天系统）
//聊天频道
enum CHAT_CHANNEL{
	ALL = -1; //所有
	LOCAL = 1; //本地
	WORLD = 2;//世界
	SYSTEM = 4;//系统
	PRIVATE = 8;//私聊
	TEAM = 16;//队伍
	GUILD = 32;//公会
}
//聊天消息结构
message ChatMessage{
	CHAT_CHANNEL channel = 1;//频道
	int32 id = 2;//聊天记录索引
	int32 from_id = 3;//来源
	string from_name = 4;
	int32 to_id = 5;//接收者
	string to_name = 6;
	string message = 7;//消息
	double time = 8;//时间
}
//聊天请求
message ChatRequest{
	ChatMessage message = 1;//填充聊天消息结构发送
}
//聊天响应
message ChatResponse{
	RESULT result = 1;
	string errormsg = 2;
	//分频道构建消息
	repeated ChatMessage localMessages = 3;
	repeated ChatMessage worldMessages = 4;
	repeated ChatMessage systemMessages = 5;
	repeated ChatMessage privateMessages = 6;
	repeated ChatMessage teamMessages = 7;
	repeated ChatMessage guildMessages = 8;
}

////////////////////////////////////////////////////////////////
//
//  战斗系统
//
////////////////////////////////////////////////////////////////

enum SKILL_RESULT
{
	OK = 0;      //成功
	OUT_OF_MP = 1;//本地
	COOL_DOWN = 2;//冷却
	INVALID_TARGET = 3; //无效的目标
	Out_OF_RANGE = 4;  //超出技能范围
	CASTING = 5;    //技能正在释放
}

enum  SKILL_STATUS {
	NONE = 0;
	CASTING = 1; //施法中
	RUNNING = 2; //执行中
}

message NSkillCastInfo
{
	int32 skillId = 1;
	int32 casterId = 2;
	int32 targetId = 3;
	NVector3 position = 4;
	SKILL_RESULT result = 5;
}

message SkillCastRequest
{
    NSkillCastInfo castInfo = 1;
}

message SkillCastResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NSKillCastInfo castInfo = 3;
	//NDamageInfo damage = 4;
}

message NDamageInfo
{
	int32 entityId = 1;
	int32 damage = 2; //伤害
	bool crit = 3;
	bool will_dead = 4;//此次伤害后死亡

}

message NSkillInfo{
	int32 id = 1;
	int32 level = 2;
}
message NSkillHitInfo
{
	int32 skillId = 1;
	int32 casterId = 2;
	int32 hitId = 3;
	bool isBullet = 4;
	repeated NDamageInfo damages = 5;
}

message SkillHitResponse {
	RESULT  result = 1;
	string errormsg =2;
	repeated NSkillHitInfo hits = 3;
}

enum BUFF_ACTION
{
	NONE = 0;
	ADD = 1;
	REMOVE =2;
	HIT =3;
}
message NBuffInfo
{
	int32 buffId = 1;
	int32 buffType = 2;
	BUFF_ACTION action = 3;
	int32 casterId = 4;
	int32 ownerId = 5;
	NDamageInfo damage = 6;
}

message BuffResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NBuffInfo buffs = 3;
}

//Arena
message ArenaPlayer {
	int32 entity_id = 1;
	string name = 2;
	int32 score = 3;
	int32 rank = 4;
}
message ArenaInfo {
	int32 arena_id = 1;
	ArenaPlayer red = 2; //红方
	ArenaPlayer bule = 3; //蓝方
}

message ArenaChallengeRequest {
	ArenaInfo arena_info = 1;
}

message ArenaChallengeResponse {
	RESULT result = 1;
	string errormsg =2;
	ArenaInfo arena_info = 3;
}

//竞技场开始
message ArenaBeginResponse {
	RESULT result = 1;
	string errormsg =2;
	ArenaInfo arena_info = 3;
}
//竞技场结束
message ArenaEndResponse {
	RESULT result = 1;
	string errormsg =2;
	ArenaInfo arena_info = 3;
}
message ArenaReadyRequest {
	int32 arenaId = 1;
	int32 entityId = 2;
}
message ArenaReadyResponse {
	int32 round = 1;
	ArenaInfo arena_info = 2;
}
message ArenaRoundStartResponse {
	int32 round = 1;
	ArenaInfo arena_info = 2;
}
message ArenaRoundEndResponse {
	int32 round = 1;
	ArenaInfo arena_info = 2;
}

enum ARENA_STATUS
{
	NONE = 0;
	WAIT = 1;
	GAME = 2;
	RESULT = 3;
}
enum ARENA_ROUND_STATUS
{
	NONE = 0;
	READY = 1;
	FIGHT = 2;
	RESULT = 3;
}
message StoryStartRequest {
	int32 storyId = 1;
}
message StoryStartResponse {
	RESULT  result = 1;
	string errormsg = 2;
	int32 storyId = 3;
	int32 instanceId = 4;
}
message StoryEndRequest {
	int32 storyId = 1;
	int32 instanceId = 2;
}
message StoryEndResponse {
	RESULT  result = 1;
	string errormsg = 2;
	int32 storyId = 3;
}


