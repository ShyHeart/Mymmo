syntax = "proto3";

package SkillBridge.Message;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
	SUCCESS = 0;
	FAILED = 1;
}

enum CHARACTER_TYPE
{
	Player = 0;
	NPC = 1;
	Monster = 2;
}

enum CHARACTER_CLASS
{
	NONE = 0;
	WARRIOR = 1;
	WIZARD = 2;
	ARCHER = 3;
}

enum CHARACTER_STATE
{
	IDLE = 0;
	MOVE = 1;
}

enum ENTITY_EVENT
{
	NONE = 0;
	IDLE = 1;
	MOVE_FWD = 2;
	MOVE_BACK = 3;
	JUMP = 4;
}

enum ITEM_TYPE{
	NORMAL = 0;
	MATERIAL = 1;
	TASK = 2;  //�������
	EQUIP = 3;
}

enum EQUIP_SLOT
{
	WEAPON = 0;
	ACCESSORY = 1;
	HELMET = 2; //ͷ��
	CHEST = 3; //�ؼ�
	SHOULDER = 4; //����
	PANTS = 5; //����
	BOOTS = 6; //ѥ��
	SLOT_MAX = 7;
}

message NUserInfo {
	int32 id = 1;
	NPlayerInfo player = 2;
}

message NPlayerInfo {
	int32 id = 1;
	repeated NCharacterInfo characters = 2;
}

message NCharacterInfo {
	int32 id = 1; //db id
	int32 config_id = 2;       //config id
	int32 entity_id = 3;       //entity id
	string name = 4;
	CHARACTER_TYPE type = 5;
	CHARACTER_CLASS class = 6;
	int32 level = 7;
	int32 mapId = 8;
	NEntity entity = 9;
        int64 gold = 10;
	repeated NItemInfo Items = 11;
	NBagInfo Bag = 12;
	bytes Equips = 13;

	repeated NQuestInfo quests = 14;
	repeated NFriendInfo friends = 15;
}

message NItemInfo
{
    int32 id = 1;
	int32 count = 2;
}

message NVector3
{
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}

message NBagInfo
{
   int32 UnLocked = 1;
   bytes Items = 2;
}
enum STATUS_ACTION
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

enum STATUS_TYPE
{
	MONEY = 0;
	EXP = 1;
	SKILL_POINT = 2;
	ITEM = 3;
}

enum STATUS_SOURCE
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

message NStatus
{
	STATUS_TYPE type = 1;
	STATUS_ACTION action = 2;
	int32 id = 3;
	int32 value = 4;
}

message StatusNotify
{
	repeated NStatus status = 1;
}
////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////


message NEntity {
	int32 id = 1;
	NVector3 position = 2;
	NVector3 direction = 3;
	int32 speed = 4;
}

message NEntitySync {
	int32 id = 1;
	ENTITY_EVENT event = 2;
	NEntity entity = 3;
	int32 param = 4;
}



////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////

message NetMessage{
	NetMessageRequest Request = 1;
	NetMessageResponse Response = 2;
}

message NetMessageRequest{
	UserRegisterRequest userRegister = 1;
	UserLoginRequest userLogin = 2;
	UserCreateCharacterRequest createChar = 3;
	UserGameEnterRequest gameEnter = 4;
	UserGameLeaveRequest gameLeave = 5;
	
	MapCharacterEnterRequest mapCharacterEnter = 6;

	MapEntitySyncRequest mapEntitySync = 8;
	MapTeleportRequest mapTeleport = 9;

	ItemBuyRequest itemBuy = 10;
	ItemEquipRequest itemEquip = 11;
	QuestListRequest questList = 12;
	QuestAcceptRequest questAccept = 13;
	QuestSubmitRequest questSubmit = 14;
	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListRequest friendList = 17;
	FriendRemoveRequest friendRemove = 18;
	//(组队系统)
	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoRequest teamInfo = 21;
	TeamLeaveRequest teamLeave = 22;
}

message NetMessageResponse{
	UserRegisterResponse userRegister = 1;
	UserLoginResponse userLogin = 2;
	UserCreateCharacterResponse createChar = 3;
	UserGameEnterResponse gameEnter = 4;
	UserGameLeaveResponse gameLeave = 5;

	MapCharacterEnterResponse mapCharacterEnter = 6;
	MapCharacterLeaveResponse mapCharacterLeave = 7;

	MapEntitySyncResponse mapEntitySync = 8;
	
	ItemBuyResponse itemBuy = 10;
	ItemEquipResponse itemEquip = 11;
    	QuestListResponse questList = 12;
	QuestAcceptResponse questAccept = 13;
    	QuestSubmitResponse questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListResponse friendList = 17;
	FriendRemoveResponse friendRemove = 18;
	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoResponse teamInfo = 21;
	TeamLeaveResponse teamLeave = 22;
	StatusNotify statusNotify = 100;
}


// User Protocol
message UserLoginRequest {
	string user = 1;
	string passward = 2;
}

message UserLoginResponse {
	RESULT result = 1;
	string errormsg = 2;
	NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
	string user = 1;
	string passward = 2;
}

message UserRegisterResponse {
	RESULT result = 1;
	string errormsg = 2;
}

message UserCreateCharacterRequest
{
	string name = 1;
	CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
	RESULT result = 1;
	string errormsg = 2;
	repeated NCharacterInfo characters = 3;
}

message UserGameEnterRequest
{
	int32 characterIdx = 1;
}

message UserGameEnterResponse {
	RESULT result = 1;
	string errormsg = 2;
	NCharacterInfo character = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
	RESULT result = 1;
	string errormsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
	int32 mapId = 1;
}

message MapCharacterEnterResponse
{
	int32 mapId = 1;
	repeated NCharacterInfo characters = 2;
}

message MapCharacterLeaveResponse
{
	int32 entityId = 1;
}


message MapEntitySyncRequest
{
    NEntitySync entitySync = 1;
}


message MapEntitySyncResponse
{
    repeated NEntitySync entitySyncs = 2;
}

message MapTeleportRequest
{
	int32 teleporterId = 1;
}

message ItemBuyRequest
{
	int32 shopId = 1;
	int32 shopItemId = 2; 
}

message ItemBuyResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

message BagSaveRequest
{
  NBagInfo BagInfo = 1;
}
message BagSaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
}
message ItemEquipRequest
{
	int32 slot = 1;
	int32 itemId = 2;
	bool isEquip = 3;
}

message ItemEquipResponse
{
	RESULT result = 1;
	string errormsg = 2;
}
//（任务系统）
//任务状态
enum QUEST_STATUS{
	IN_PROGRESS = 0;  //已接受，未完成
	COMPLATED = 1; //已完成，未提交
	FINISHED = 2; //已完成，已提交
	FAILED = 3; //已失败
}
//任务列表类型
enum QUEST_LIST_TYPE{
	ALL = 0;	//所有任务
	IN_PROGRESS = 1;  //进行中任务
	FINISHED = 2;	//已完成任务
}
//任务信息
message NQuestInfo{
	//任务ID
	int32 quest_id = 1;
	//任务唯一ID
	int32 quest_guid = 2;
	//任务状态
	QUEST_STATUS status = 3;
	//任务目标
	repeated int32 targets = 4;
}
//请求任务列表协议
message QuestListRequest{
	QUEST_LIST_TYPE listType = 1;
}
//响应任务列表协议
message QuestListResponse{
	//结果
	RESULT result = 1;
	//消息
	string errormsg = 2;
	//内容
	repeated NQuestInfo quests = 3;
}
//接受任务请求
message QuestAcceptRequest{
	int32 quest_id = 1;
}
//接受任务响应
message QuestAcceptResponse{
	RESULT result = 1;
	string errormsg = 2;
	//任务信息
	NQuestInfo quest = 3;
}
//提交任务请求
message QuestSubmitRequest{
	int32 quest_id = 1;
}
//提交任务响应
message QuestSubmitResponse{
	RESULT result = 1;
	string errormsg = 2;
	//任务信息
	NQuestInfo quest = 3;
}
//拒绝任务请求
message QuestAbandonRequest{
	int32 quest_id = 1;
}
//拒绝任务响应 
message QuestAbandonResponse{
	RESULT result = 1;
	string errormsg = 2;
}
//(好友系统)
//好友信息
message NFriendInfo{
	int32 id = 1;//添加好友纪录ID
	NCharacterInfo friendInfo = 2;//好友信息
	int32 status = 3;//好友状态
}
//添加好友请求
message FriendAddRequest{
	int32 from_id = 1;//玩家自己ID
	string from_name = 2;//玩家自己名字
	int32 to_id = 3;//对方玩家ID
	string to_name = 4;//对方玩家名称
}
//添加好友响应
message FriendAddResponse{
	RESULT result = 1;
	string errormsg = 2;
	FriendAddRequest request = 3;//好友请求一直存在响应中，方便获取响应成功或失败对应哪条请求，时刻跟踪请求信息
}
//好友列表请求
message FriendListRequest{
	
}
//好友列表响应
message FriendListResponse{
	RESULT result = 1;
	string errormsg = 2;
	repeated NFriendInfo friends = 3;//当前所有好友
}
//好友移除请求
message FriendRemoveRequest{
	int32 id = 1;
	int32 friendId = 2;
}
//好友移除响应
message FriendRemoveResponse{
	RESULT result = 1;
	string errormsg = 2;
	int32 id = 3;
}
//(组队系统)
//组队信息
message NTeamInfo{
	int32 id = 1;//队伍ID
	int32 leader = 2;//队长
	repeated NCharacterInfo members = 3;//队伍成员
}
//组队请求
message TeamInviteRequest{
	int32 team_id = 1;//队伍ID
	int32 from_id = 2;
	string from_name = 3;
	int32 to_id = 4;
	string to_name = 5;
}
//组队响应
message TeamInviteResponse{
	RESULT result = 1;
	string errormsg = 2;
	TeamInviteRequest request = 3;
}
//队伍信息请求
message TeamInfoRequest{

}
//队伍信息响应
message TeamInfoResponse{
	RESULT result = 1;
	string errormsg = 2;
	NTeamInfo team = 3;
}
//离开队伍请求
message TeamLeaveRequest{
	int32 team_id = 1;
	int32 characterId = 2;
}
//离开队伍响应
message TeamLeaveResponse{
	RESULT result = 1;
	string errormsg = 2;
	int32 characterId = 3;
}
